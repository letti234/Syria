//DATA IMPORT/////////////////////////////////////////////////////////////////////////

//Syria boundary polygon
var Syria = ee.FeatureCollection('users/salem043/syr_admin0');
//Map.addLayer(Syria, {color: 'FF0000'}, 'Syria');

//Conflict site location data
var site = ee.FeatureCollection('ft:1UNSrVLRJihOaHiXKYZNR_OIR3_E6PBuawdd1mKsU');
//Map.addLayer(site, {color: 'red'}, 'location');

//Worldpop population data
var pop = ee.ImageCollection("WorldPop/GP/100m/pop").filterDate('2000', '2010').filterBounds(Syria);
var pop2 = pop.map(function(image) { return image.clip(Syria); });
print('Worldpop data', pop2);

//Grid cells over Syria 

var lat_start = 32.31644;
var lat_end = 37.31914;
var lon_start = 35.61394; 
var lon_end = 42.38504;
// 2) Decide no. of (in this case: equally sized) cells
var num_cells = 10000;
var lon_edge = (lon_end-lon_start)/Math.sqrt(num_cells);
var lat_edge = (lat_end-lat_start)/Math.sqrt(num_cells);
// 3) Create the grid
var polys = [];
var polys_line = [];
var cell_id = 0;
for (var lon = lon_start; lon < lon_end; lon += lon_edge) {
  var x1 = lon;
  var x2 = lon + lon_edge;
  for (var lat = lat_start; lat < lat_end; lat += lat_edge) {
    cell_id = cell_id + 1;
    var y1 = lat;
    var y2 = lat + lat_edge;

    polys.push(ee.Feature(ee.Geometry.Rectangle(x1, y1, x2, y2), {label: cell_id}));
  }
}
var grid = ee.FeatureCollection(polys).filterBounds(Syria);
print('Grid', grid)
Map.addLayer(grid);



//PREDICTED POPULATION WITHIN EACH GRID CELL ///////////////////////////////////////

//This converts our image collection into a stack of bands
function newCollectionToImage(collection){
var stack = ee.Image(collection.iterate(function(img, prev) {
return ee.Image(prev).addBands(img);
}, ee.Image(1)));
 
stack = stack.select(ee.List.sequence(1, stack.bandNames().size().subtract(1)));
return stack;
}

var tch = pop.map(function(img){
var y = ee.String(ee.Date(img.get('system:time_start')).get("year"));
return img.set("year",y).rename(y);
});

 
// create single image from collection
var tchImg = newCollectionToImage(tch);
print("pop2", tchImg);

var pop_Syria=tchImg.clip(Syria);
print(pop_Syria);

//var pop_grid = pop_Syria.reduceRegions({grid,reducer: 
//ee.Reducer.sum(), scale: 6000,});

var result = pop_Syria.reduceRegions(grid,ee.Reducer.sum());
print(result);

